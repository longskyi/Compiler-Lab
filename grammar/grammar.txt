//S -> A
//A -> A b | b B a
//B -> a A c | a | a A b
//E -> E + T | T
//T -> T * F | F
//F -> ( E ) | i
//ExprList -> Expr | ExprList , Expr
//Expr -> i | d | d [ ExprList ] | d ( ExprList ) | Expr + Expr | Expr * Expr
//Bool -> Expr r Expr | Expr && Expr
//注释，此行忽略 真正的 | 为 \|
//A -> B a | a    // 添加 A → a
//B -> A b | b    // 添加 B → b
Program -> DeclList StmtList
DeclList -> epsilon | DeclList Decl ;
Decl -> Type d | Type d [ i ] | Type d ( ArgList ) { DeclList StmtList }
Type -> int | void
ArgList -> epsilon | ArgList Arg ;
Arg -> Type d | d [ ] | Type d ( )
StmtList -> Stmt | StmtList ; Stmt
Stmt -> d = Expr | if ( Bool ) Stmt | if ( Bool ) Stmt else Stmt | while ( Bool ) Stmt | return Expr | { StmtList } | d ( ParamList )
Bool -> Expr r Expr | Expr
Expr -> d = Expr | i | d | d ( ParamList ) |  Expr + Expr | Expr * Expr | ( Expr ) 
ParamList -> epsilon | ParamList Param ,
Param -> Expr | d [ ] | d ( )